<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1140,1668.8" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="워크플로 호출과 인자 이해 기초 시퀀스" sap:VirtualizedContainerService.HintSize="560,1657.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Double" Name="dblFirstValue" />
      <Variable x:TypeArguments="x:Double" Name="dblSecondValue" />
      <Variable x:TypeArguments="x:String" Name="strChosenOperation" />
      <Variable x:TypeArguments="x:String" Default="계산 전입니다" Name="strExecutionInfo" />
      <Variable x:TypeArguments="x:Double" Name="dblResult" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" sap2010:Annotation.AnnotationText="사칙 연산에 활용할 첫 번째 값을 입력받음" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="497.6,272.8" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="사칙 연산에 활용할 첫 번째 값을 입력하세요" Title="첫 번째 값 입력">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:Double">[dblFirstValue]</OutArgument>
      </ui:InputDialog.Result>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InputDialog>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" sap2010:Annotation.AnnotationText="사칙 연산에 활용할 두 번째 값을 입력받음" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="497.6,272.8" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="사칙 연산에 활용할 두 번째 값을 입력하세요" Title="두 번째 값 입력">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:Double">[dblSecondValue]</OutArgument>
      </ui:InputDialog.Result>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InputDialog>
    <ui:InputDialog Options="{x:Null}" sap2010:Annotation.AnnotationText="수행할 사칙 연산을 선택함 " DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="497.6,326.4" sap2010:WorkflowViewState.IdRef="InputDialog_3" IsPassword="False" Label="수행할 사칙연산 선택" OptionsString="덧셈;곱셈;뺄셈;나눗셈" Title="사칙 연산 선택">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[strChosenOperation]</OutArgument>
      </ui:InputDialog.Result>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InputDialog>
    <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[strChosenOperation]" sap:VirtualizedContainerService.HintSize="497.6,371.2" sap2010:WorkflowViewState.IdRef="Switch`1_1">
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="덧셈" DisplayName="덧셈_워크플로.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="덧셈_워크플로.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="x:String" x:Key="io_strExecutionInfo">[strExecutionInfo]</InOutArgument>
          <OutArgument x:TypeArguments="x:Double" x:Key="out_dblSum">[dblResult]</OutArgument>
          <InArgument x:TypeArguments="x:Double" x:Key="in_dblFirstValue">[dblFirstValue]</InArgument>
          <InArgument x:TypeArguments="x:Double" x:Key="in_dblSecondValue">[dblSecondValue]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="곱셈" DisplayName="곱셈_워크플로.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="곱셈_워크플로.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="x:String" x:Key="io_strExecutionInfo">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="strExecutionInfo" />
          </InOutArgument>
          <OutArgument x:TypeArguments="x:Double" x:Key="out_dbIMul">
            <VisualBasicReference x:TypeArguments="x:Double" ExpressionText="dblResult" />
          </OutArgument>
          <InArgument x:TypeArguments="x:Double" x:Key="in_dblFirstValue">
            <VisualBasicValue x:TypeArguments="x:Double" ExpressionText="dblFirstValue" />
          </InArgument>
          <InArgument x:TypeArguments="x:Double" x:Key="in_dblSecondValue">
            <VisualBasicValue x:TypeArguments="x:Double" ExpressionText="dblSecondValue" />
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="뺄셈" DisplayName="뺄셈_워크플로.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="뺄셈_워크플로.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="x:String" x:Key="io_strExecutionInfo">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="strExecutionInfo" />
          </InOutArgument>
          <OutArgument x:TypeArguments="x:Double" x:Key="out_dbISub">
            <VisualBasicReference x:TypeArguments="x:Double" ExpressionText="dblResult" />
          </OutArgument>
          <InArgument x:TypeArguments="x:Double" x:Key="in_dblFirstValue">
            <VisualBasicValue x:TypeArguments="x:Double" ExpressionText="dblFirstValue" />
          </InArgument>
          <InArgument x:TypeArguments="x:Double" x:Key="in_dblSecondValue">
            <VisualBasicValue x:TypeArguments="x:Double" ExpressionText="dblSecondValue" />
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="나눗셈" DisplayName="나눗셈_워크플로.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="나눗셈_워크플로.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="x:String" x:Key="io_strExecutionInfo">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="strExecutionInfo" />
          </InOutArgument>
          <OutArgument x:TypeArguments="x:Double" x:Key="out_dbIDiv">
            <VisualBasicReference x:TypeArguments="x:Double" ExpressionText="dblResult" />
          </OutArgument>
          <InArgument x:TypeArguments="x:Double" x:Key="in_dblFirstValue">
            <VisualBasicValue x:TypeArguments="x:Double" ExpressionText="dblFirstValue" />
          </InArgument>
          <InArgument x:TypeArguments="x:Double" x:Key="in_dblSecondValue">
            <VisualBasicValue x:TypeArguments="x:Double" ExpressionText="dblSecondValue" />
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Switch>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="497.6,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[strExecutionInfo + &quot; 계산 결과: &quot; + dblResult.ToString]" />
  </Sequence>
</Activity>